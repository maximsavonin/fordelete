#
!main.cpp cctype cerrno clocale cmath cstdint cstdio cstdlib ctype.h cwchar cwctype errno.h exception graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new numeric ostream random signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error time.h type_traits typeinfo utility vector wchar.h wctype.h #<#>
Circl _type_ #<main.cpp>
Circl(int x, int y, int r, int color=WHITE, int thickness=1) #<main.cpp>
Figure _type_ #<main.cpp>
Figure(int x0, int y0, int color=WHITE, int thickness=1) #<main.cpp>
Line _type_ #<main.cpp>
Line(const Line& a) #<main.cpp>
Line(int x0, int y0, int x1, int y1, int color=WHITE, int thickness=1) #<main.cpp>
Rect _type_ #<main.cpp>
Rect(int x0, int y0, int x1, int y1, int color=WHITE, int thickness=1) #<main.cpp>
_USE_MATH_DEFINES #<main.cpp>
addCircle(Figure* acts[], int& countFigure, int color) -> void #<main.cpp>
addLine(Figure* acts[], int& countFigure, int color) -> void #<main.cpp>
addRect(Figure* acts[], int& countFigure, int color) -> void #<main.cpp>
drawAll(Figure* acts[], int countFigure) -> void #<main.cpp>
main() -> int #<main.cpp>
	Circl:%r : int #<main.cpp>
	Circl:%x0 : int #<main.cpp>
	Circl:%y0 : int #<main.cpp>
	Circl:%color : int #<main.cpp>
	Circl:%thickness : int #<main.cpp>
	Circl::setRadius(int r) -> void #<main.cpp>
	Circl::draw() -> void #<main.cpp>
	Circl::setCoord(int x0, int y0) -> void #<main.cpp>
	Circl::setColor(int color) -> void #<main.cpp>
	Circl::setThickness(int thickness) -> void #<main.cpp>
	Circl::draw() -> virtual void #<main.cpp>
	Figure:%x0 : int #<main.cpp>
	Figure:%y0 : int #<main.cpp>
	Figure:%color : int #<main.cpp>
	Figure:%thickness : int #<main.cpp>
	Figure::setCoord(int x0, int y0) -> void #<main.cpp>
	Figure::setColor(int color) -> void #<main.cpp>
	Figure::setThickness(int thickness) -> void #<main.cpp>
	Figure::draw() -> virtual void #<main.cpp>
	Line:%x1 : int #<main.cpp>
	Line:%y1 : int #<main.cpp>
	Line:%x0 : int #<main.cpp>
	Line:%y0 : int #<main.cpp>
	Line:%color : int #<main.cpp>
	Line:%thickness : int #<main.cpp>
	Line::setCoordEnd(int x1, int y1) -> void #<main.cpp>
	Line::draw() -> void #<main.cpp>
	Line::setCoord(int x0, int y0) -> void #<main.cpp>
	Line::setColor(int color) -> void #<main.cpp>
	Line::setThickness(int thickness) -> void #<main.cpp>
	Line::draw() -> virtual void #<main.cpp>
	Rect:%x1 : int #<main.cpp>
	Rect:%y1 : int #<main.cpp>
	Rect:%x0 : int #<main.cpp>
	Rect:%y0 : int #<main.cpp>
	Rect:%color : int #<main.cpp>
	Rect:%thickness : int #<main.cpp>
	Rect::setCoordEnd(int x1, int y1) -> void #<main.cpp>
	Rect::draw() -> void #<main.cpp>
	Rect::setCoord(int x0, int y0) -> void #<main.cpp>
	Rect::setColor(int color) -> void #<main.cpp>
	Rect::setThickness(int thickness) -> void #<main.cpp>
	Rect::draw() -> virtual void #<main.cpp>
